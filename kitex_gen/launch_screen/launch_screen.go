/*
Copyright 2024 The west2-online Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by thriftgo (0.4.2). DO NOT EDIT.

package launch_screen

import (
	"context"
	"fmt"

	"github.com/cloudwego/kitex/pkg/streaming"

	"github.com/west2-online/fzuhelper-server/kitex_gen/model"
)

type CreateImageRequest struct {
	PicType     int64  `thrift:"pic_type,1,required" frugal:"1,required,i64" json:"pic_type"`
	Duration    *int64 `thrift:"duration,2,optional" frugal:"2,optional,i64" json:"duration,omitempty"`
	Href        string `thrift:"href,3" frugal:"3,default,string" json:"href"`
	Image       []byte `thrift:"image,4,required" frugal:"4,required,binary" json:"image"`
	StartAt     int64  `thrift:"start_at,5,required" frugal:"5,required,i64" json:"start_at"`
	EndAt       int64  `thrift:"end_at,6,required" frugal:"6,required,i64" json:"end_at"`
	SType       int64  `thrift:"s_type,7,required" frugal:"7,required,i64" json:"s_type"`
	Frequency   int64  `thrift:"frequency,8,required" frugal:"8,required,i64" json:"frequency"`
	StartTime   int64  `thrift:"start_time,9,required" frugal:"9,required,i64" json:"start_time"`
	EndTime     int64  `thrift:"end_time,10,required" frugal:"10,required,i64" json:"end_time"`
	Text        string `thrift:"text,11,required" frugal:"11,required,string" json:"text"`
	Regex       string `thrift:"regex,12,required" frugal:"12,required,string" json:"regex"`
	BufferCount int64  `thrift:"buffer_count,13" frugal:"13,default,i64" json:"buffer_count"`
}

func NewCreateImageRequest() *CreateImageRequest {
	return &CreateImageRequest{}
}

func (p *CreateImageRequest) InitDefault() {
}

func (p *CreateImageRequest) GetPicType() (v int64) {
	return p.PicType
}

var CreateImageRequest_Duration_DEFAULT int64

func (p *CreateImageRequest) GetDuration() (v int64) {
	if !p.IsSetDuration() {
		return CreateImageRequest_Duration_DEFAULT
	}
	return *p.Duration
}

func (p *CreateImageRequest) GetHref() (v string) {
	return p.Href
}

func (p *CreateImageRequest) GetImage() (v []byte) {
	return p.Image
}

func (p *CreateImageRequest) GetStartAt() (v int64) {
	return p.StartAt
}

func (p *CreateImageRequest) GetEndAt() (v int64) {
	return p.EndAt
}

func (p *CreateImageRequest) GetSType() (v int64) {
	return p.SType
}

func (p *CreateImageRequest) GetFrequency() (v int64) {
	return p.Frequency
}

func (p *CreateImageRequest) GetStartTime() (v int64) {
	return p.StartTime
}

func (p *CreateImageRequest) GetEndTime() (v int64) {
	return p.EndTime
}

func (p *CreateImageRequest) GetText() (v string) {
	return p.Text
}

func (p *CreateImageRequest) GetRegex() (v string) {
	return p.Regex
}

func (p *CreateImageRequest) GetBufferCount() (v int64) {
	return p.BufferCount
}
func (p *CreateImageRequest) SetPicType(val int64) {
	p.PicType = val
}
func (p *CreateImageRequest) SetDuration(val *int64) {
	p.Duration = val
}
func (p *CreateImageRequest) SetHref(val string) {
	p.Href = val
}
func (p *CreateImageRequest) SetImage(val []byte) {
	p.Image = val
}
func (p *CreateImageRequest) SetStartAt(val int64) {
	p.StartAt = val
}
func (p *CreateImageRequest) SetEndAt(val int64) {
	p.EndAt = val
}
func (p *CreateImageRequest) SetSType(val int64) {
	p.SType = val
}
func (p *CreateImageRequest) SetFrequency(val int64) {
	p.Frequency = val
}
func (p *CreateImageRequest) SetStartTime(val int64) {
	p.StartTime = val
}
func (p *CreateImageRequest) SetEndTime(val int64) {
	p.EndTime = val
}
func (p *CreateImageRequest) SetText(val string) {
	p.Text = val
}
func (p *CreateImageRequest) SetRegex(val string) {
	p.Regex = val
}
func (p *CreateImageRequest) SetBufferCount(val int64) {
	p.BufferCount = val
}

func (p *CreateImageRequest) IsSetDuration() bool {
	return p.Duration != nil
}

func (p *CreateImageRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CreateImageRequest(%+v)", *p)
}

var fieldIDToName_CreateImageRequest = map[int16]string{
	1:  "pic_type",
	2:  "duration",
	3:  "href",
	4:  "image",
	5:  "start_at",
	6:  "end_at",
	7:  "s_type",
	8:  "frequency",
	9:  "start_time",
	10: "end_time",
	11: "text",
	12: "regex",
	13: "buffer_count",
}

type CreateImageResponse struct {
	Base    *model.BaseResp `thrift:"base,1" frugal:"1,default,model.BaseResp" json:"base"`
	Picture *model.Picture  `thrift:"picture,2,optional" frugal:"2,optional,model.Picture" json:"picture,omitempty"`
}

func NewCreateImageResponse() *CreateImageResponse {
	return &CreateImageResponse{}
}

func (p *CreateImageResponse) InitDefault() {
}

var CreateImageResponse_Base_DEFAULT *model.BaseResp

func (p *CreateImageResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return CreateImageResponse_Base_DEFAULT
	}
	return p.Base
}

var CreateImageResponse_Picture_DEFAULT *model.Picture

func (p *CreateImageResponse) GetPicture() (v *model.Picture) {
	if !p.IsSetPicture() {
		return CreateImageResponse_Picture_DEFAULT
	}
	return p.Picture
}
func (p *CreateImageResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}
func (p *CreateImageResponse) SetPicture(val *model.Picture) {
	p.Picture = val
}

func (p *CreateImageResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *CreateImageResponse) IsSetPicture() bool {
	return p.Picture != nil
}

func (p *CreateImageResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CreateImageResponse(%+v)", *p)
}

var fieldIDToName_CreateImageResponse = map[int16]string{
	1: "base",
	2: "picture",
}

type GetImageRequest struct {
	PictureId int64 `thrift:"picture_id,1,required" frugal:"1,required,i64" json:"picture_id"`
}

func NewGetImageRequest() *GetImageRequest {
	return &GetImageRequest{}
}

func (p *GetImageRequest) InitDefault() {
}

func (p *GetImageRequest) GetPictureId() (v int64) {
	return p.PictureId
}
func (p *GetImageRequest) SetPictureId(val int64) {
	p.PictureId = val
}

func (p *GetImageRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetImageRequest(%+v)", *p)
}

var fieldIDToName_GetImageRequest = map[int16]string{
	1: "picture_id",
}

type GetImageResponse struct {
	Base    *model.BaseResp `thrift:"base,1" frugal:"1,default,model.BaseResp" json:"base"`
	Picture *model.Picture  `thrift:"picture,2,optional" frugal:"2,optional,model.Picture" json:"picture,omitempty"`
}

func NewGetImageResponse() *GetImageResponse {
	return &GetImageResponse{}
}

func (p *GetImageResponse) InitDefault() {
}

var GetImageResponse_Base_DEFAULT *model.BaseResp

func (p *GetImageResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return GetImageResponse_Base_DEFAULT
	}
	return p.Base
}

var GetImageResponse_Picture_DEFAULT *model.Picture

func (p *GetImageResponse) GetPicture() (v *model.Picture) {
	if !p.IsSetPicture() {
		return GetImageResponse_Picture_DEFAULT
	}
	return p.Picture
}
func (p *GetImageResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}
func (p *GetImageResponse) SetPicture(val *model.Picture) {
	p.Picture = val
}

func (p *GetImageResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *GetImageResponse) IsSetPicture() bool {
	return p.Picture != nil
}

func (p *GetImageResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetImageResponse(%+v)", *p)
}

var fieldIDToName_GetImageResponse = map[int16]string{
	1: "base",
	2: "picture",
}

type ChangeImagePropertyRequest struct {
	PicType   int64   `thrift:"pic_type,1,required" frugal:"1,required,i64" json:"pic_type"`
	Duration  *int64  `thrift:"duration,2,optional" frugal:"2,optional,i64" json:"duration,omitempty"`
	Href      *string `thrift:"href,3,optional" frugal:"3,optional,string" json:"href,omitempty"`
	StartAt   int64   `thrift:"start_at,4,required" frugal:"4,required,i64" json:"start_at"`
	EndAt     int64   `thrift:"end_at,5,required" frugal:"5,required,i64" json:"end_at"`
	SType     int64   `thrift:"s_type,6,required" frugal:"6,required,i64" json:"s_type"`
	Frequency int64   `thrift:"frequency,7,required" frugal:"7,required,i64" json:"frequency"`
	StartTime int64   `thrift:"start_time,8,required" frugal:"8,required,i64" json:"start_time"`
	EndTime   int64   `thrift:"end_time,9,required" frugal:"9,required,i64" json:"end_time"`
	Text      string  `thrift:"text,10,required" frugal:"10,required,string" json:"text"`
	PictureId int64   `thrift:"picture_id,11,required" frugal:"11,required,i64" json:"picture_id"`
	Regex     string  `thrift:"regex,12,required" frugal:"12,required,string" json:"regex"`
}

func NewChangeImagePropertyRequest() *ChangeImagePropertyRequest {
	return &ChangeImagePropertyRequest{}
}

func (p *ChangeImagePropertyRequest) InitDefault() {
}

func (p *ChangeImagePropertyRequest) GetPicType() (v int64) {
	return p.PicType
}

var ChangeImagePropertyRequest_Duration_DEFAULT int64

func (p *ChangeImagePropertyRequest) GetDuration() (v int64) {
	if !p.IsSetDuration() {
		return ChangeImagePropertyRequest_Duration_DEFAULT
	}
	return *p.Duration
}

var ChangeImagePropertyRequest_Href_DEFAULT string

func (p *ChangeImagePropertyRequest) GetHref() (v string) {
	if !p.IsSetHref() {
		return ChangeImagePropertyRequest_Href_DEFAULT
	}
	return *p.Href
}

func (p *ChangeImagePropertyRequest) GetStartAt() (v int64) {
	return p.StartAt
}

func (p *ChangeImagePropertyRequest) GetEndAt() (v int64) {
	return p.EndAt
}

func (p *ChangeImagePropertyRequest) GetSType() (v int64) {
	return p.SType
}

func (p *ChangeImagePropertyRequest) GetFrequency() (v int64) {
	return p.Frequency
}

func (p *ChangeImagePropertyRequest) GetStartTime() (v int64) {
	return p.StartTime
}

func (p *ChangeImagePropertyRequest) GetEndTime() (v int64) {
	return p.EndTime
}

func (p *ChangeImagePropertyRequest) GetText() (v string) {
	return p.Text
}

func (p *ChangeImagePropertyRequest) GetPictureId() (v int64) {
	return p.PictureId
}

func (p *ChangeImagePropertyRequest) GetRegex() (v string) {
	return p.Regex
}
func (p *ChangeImagePropertyRequest) SetPicType(val int64) {
	p.PicType = val
}
func (p *ChangeImagePropertyRequest) SetDuration(val *int64) {
	p.Duration = val
}
func (p *ChangeImagePropertyRequest) SetHref(val *string) {
	p.Href = val
}
func (p *ChangeImagePropertyRequest) SetStartAt(val int64) {
	p.StartAt = val
}
func (p *ChangeImagePropertyRequest) SetEndAt(val int64) {
	p.EndAt = val
}
func (p *ChangeImagePropertyRequest) SetSType(val int64) {
	p.SType = val
}
func (p *ChangeImagePropertyRequest) SetFrequency(val int64) {
	p.Frequency = val
}
func (p *ChangeImagePropertyRequest) SetStartTime(val int64) {
	p.StartTime = val
}
func (p *ChangeImagePropertyRequest) SetEndTime(val int64) {
	p.EndTime = val
}
func (p *ChangeImagePropertyRequest) SetText(val string) {
	p.Text = val
}
func (p *ChangeImagePropertyRequest) SetPictureId(val int64) {
	p.PictureId = val
}
func (p *ChangeImagePropertyRequest) SetRegex(val string) {
	p.Regex = val
}

func (p *ChangeImagePropertyRequest) IsSetDuration() bool {
	return p.Duration != nil
}

func (p *ChangeImagePropertyRequest) IsSetHref() bool {
	return p.Href != nil
}

func (p *ChangeImagePropertyRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ChangeImagePropertyRequest(%+v)", *p)
}

var fieldIDToName_ChangeImagePropertyRequest = map[int16]string{
	1:  "pic_type",
	2:  "duration",
	3:  "href",
	4:  "start_at",
	5:  "end_at",
	6:  "s_type",
	7:  "frequency",
	8:  "start_time",
	9:  "end_time",
	10: "text",
	11: "picture_id",
	12: "regex",
}

type ChangeImagePropertyResponse struct {
	Base    *model.BaseResp `thrift:"base,1" frugal:"1,default,model.BaseResp" json:"base"`
	Picture *model.Picture  `thrift:"picture,2,optional" frugal:"2,optional,model.Picture" json:"picture,omitempty"`
}

func NewChangeImagePropertyResponse() *ChangeImagePropertyResponse {
	return &ChangeImagePropertyResponse{}
}

func (p *ChangeImagePropertyResponse) InitDefault() {
}

var ChangeImagePropertyResponse_Base_DEFAULT *model.BaseResp

func (p *ChangeImagePropertyResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return ChangeImagePropertyResponse_Base_DEFAULT
	}
	return p.Base
}

var ChangeImagePropertyResponse_Picture_DEFAULT *model.Picture

func (p *ChangeImagePropertyResponse) GetPicture() (v *model.Picture) {
	if !p.IsSetPicture() {
		return ChangeImagePropertyResponse_Picture_DEFAULT
	}
	return p.Picture
}
func (p *ChangeImagePropertyResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}
func (p *ChangeImagePropertyResponse) SetPicture(val *model.Picture) {
	p.Picture = val
}

func (p *ChangeImagePropertyResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *ChangeImagePropertyResponse) IsSetPicture() bool {
	return p.Picture != nil
}

func (p *ChangeImagePropertyResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ChangeImagePropertyResponse(%+v)", *p)
}

var fieldIDToName_ChangeImagePropertyResponse = map[int16]string{
	1: "base",
	2: "picture",
}

type ChangeImageRequest struct {
	PictureId   int64  `thrift:"picture_id,1,required" frugal:"1,required,i64" json:"picture_id"`
	Image       []byte `thrift:"image,2,required" frugal:"2,required,binary" json:"image"`
	BufferCount int64  `thrift:"buffer_count,3" frugal:"3,default,i64" json:"buffer_count"`
}

func NewChangeImageRequest() *ChangeImageRequest {
	return &ChangeImageRequest{}
}

func (p *ChangeImageRequest) InitDefault() {
}

func (p *ChangeImageRequest) GetPictureId() (v int64) {
	return p.PictureId
}

func (p *ChangeImageRequest) GetImage() (v []byte) {
	return p.Image
}

func (p *ChangeImageRequest) GetBufferCount() (v int64) {
	return p.BufferCount
}
func (p *ChangeImageRequest) SetPictureId(val int64) {
	p.PictureId = val
}
func (p *ChangeImageRequest) SetImage(val []byte) {
	p.Image = val
}
func (p *ChangeImageRequest) SetBufferCount(val int64) {
	p.BufferCount = val
}

func (p *ChangeImageRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ChangeImageRequest(%+v)", *p)
}

var fieldIDToName_ChangeImageRequest = map[int16]string{
	1: "picture_id",
	2: "image",
	3: "buffer_count",
}

type ChangeImageResponse struct {
	Base    *model.BaseResp `thrift:"base,1" frugal:"1,default,model.BaseResp" json:"base"`
	Picture *model.Picture  `thrift:"picture,2,optional" frugal:"2,optional,model.Picture" json:"picture,omitempty"`
}

func NewChangeImageResponse() *ChangeImageResponse {
	return &ChangeImageResponse{}
}

func (p *ChangeImageResponse) InitDefault() {
}

var ChangeImageResponse_Base_DEFAULT *model.BaseResp

func (p *ChangeImageResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return ChangeImageResponse_Base_DEFAULT
	}
	return p.Base
}

var ChangeImageResponse_Picture_DEFAULT *model.Picture

func (p *ChangeImageResponse) GetPicture() (v *model.Picture) {
	if !p.IsSetPicture() {
		return ChangeImageResponse_Picture_DEFAULT
	}
	return p.Picture
}
func (p *ChangeImageResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}
func (p *ChangeImageResponse) SetPicture(val *model.Picture) {
	p.Picture = val
}

func (p *ChangeImageResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *ChangeImageResponse) IsSetPicture() bool {
	return p.Picture != nil
}

func (p *ChangeImageResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("ChangeImageResponse(%+v)", *p)
}

var fieldIDToName_ChangeImageResponse = map[int16]string{
	1: "base",
	2: "picture",
}

type DeleteImageRequest struct {
	PictureId int64 `thrift:"picture_id,1,required" frugal:"1,required,i64" json:"picture_id"`
}

func NewDeleteImageRequest() *DeleteImageRequest {
	return &DeleteImageRequest{}
}

func (p *DeleteImageRequest) InitDefault() {
}

func (p *DeleteImageRequest) GetPictureId() (v int64) {
	return p.PictureId
}
func (p *DeleteImageRequest) SetPictureId(val int64) {
	p.PictureId = val
}

func (p *DeleteImageRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("DeleteImageRequest(%+v)", *p)
}

var fieldIDToName_DeleteImageRequest = map[int16]string{
	1: "picture_id",
}

type DeleteImageResponse struct {
	Base *model.BaseResp `thrift:"base,1" frugal:"1,default,model.BaseResp" json:"base"`
}

func NewDeleteImageResponse() *DeleteImageResponse {
	return &DeleteImageResponse{}
}

func (p *DeleteImageResponse) InitDefault() {
}

var DeleteImageResponse_Base_DEFAULT *model.BaseResp

func (p *DeleteImageResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return DeleteImageResponse_Base_DEFAULT
	}
	return p.Base
}
func (p *DeleteImageResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}

func (p *DeleteImageResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *DeleteImageResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("DeleteImageResponse(%+v)", *p)
}

var fieldIDToName_DeleteImageResponse = map[int16]string{
	1: "base",
}

type MobileGetImageRequest struct {
	SType     int64   `thrift:"s_type,1,required" frugal:"1,required,i64" json:"s_type"`
	StudentId string  `thrift:"student_id,2,required" frugal:"2,required,string" json:"student_id"`
	College   *string `thrift:"college,3,optional" frugal:"3,optional,string" json:"college,omitempty"`
	Device    string  `thrift:"device,4,required" frugal:"4,required,string" json:"device"`
}

func NewMobileGetImageRequest() *MobileGetImageRequest {
	return &MobileGetImageRequest{}
}

func (p *MobileGetImageRequest) InitDefault() {
}

func (p *MobileGetImageRequest) GetSType() (v int64) {
	return p.SType
}

func (p *MobileGetImageRequest) GetStudentId() (v string) {
	return p.StudentId
}

var MobileGetImageRequest_College_DEFAULT string

func (p *MobileGetImageRequest) GetCollege() (v string) {
	if !p.IsSetCollege() {
		return MobileGetImageRequest_College_DEFAULT
	}
	return *p.College
}

func (p *MobileGetImageRequest) GetDevice() (v string) {
	return p.Device
}
func (p *MobileGetImageRequest) SetSType(val int64) {
	p.SType = val
}
func (p *MobileGetImageRequest) SetStudentId(val string) {
	p.StudentId = val
}
func (p *MobileGetImageRequest) SetCollege(val *string) {
	p.College = val
}
func (p *MobileGetImageRequest) SetDevice(val string) {
	p.Device = val
}

func (p *MobileGetImageRequest) IsSetCollege() bool {
	return p.College != nil
}

func (p *MobileGetImageRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("MobileGetImageRequest(%+v)", *p)
}

var fieldIDToName_MobileGetImageRequest = map[int16]string{
	1: "s_type",
	2: "student_id",
	3: "college",
	4: "device",
}

type MobileGetImageResponse struct {
	Base        *model.BaseResp  `thrift:"base,1" frugal:"1,default,model.BaseResp" json:"base"`
	Count       *int64           `thrift:"count,2,optional" frugal:"2,optional,i64" json:"count,omitempty"`
	PictureList []*model.Picture `thrift:"picture_list,3,optional" frugal:"3,optional,list<model.Picture>" json:"picture_list,omitempty"`
}

func NewMobileGetImageResponse() *MobileGetImageResponse {
	return &MobileGetImageResponse{}
}

func (p *MobileGetImageResponse) InitDefault() {
}

var MobileGetImageResponse_Base_DEFAULT *model.BaseResp

func (p *MobileGetImageResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return MobileGetImageResponse_Base_DEFAULT
	}
	return p.Base
}

var MobileGetImageResponse_Count_DEFAULT int64

func (p *MobileGetImageResponse) GetCount() (v int64) {
	if !p.IsSetCount() {
		return MobileGetImageResponse_Count_DEFAULT
	}
	return *p.Count
}

var MobileGetImageResponse_PictureList_DEFAULT []*model.Picture

func (p *MobileGetImageResponse) GetPictureList() (v []*model.Picture) {
	if !p.IsSetPictureList() {
		return MobileGetImageResponse_PictureList_DEFAULT
	}
	return p.PictureList
}
func (p *MobileGetImageResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}
func (p *MobileGetImageResponse) SetCount(val *int64) {
	p.Count = val
}
func (p *MobileGetImageResponse) SetPictureList(val []*model.Picture) {
	p.PictureList = val
}

func (p *MobileGetImageResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *MobileGetImageResponse) IsSetCount() bool {
	return p.Count != nil
}

func (p *MobileGetImageResponse) IsSetPictureList() bool {
	return p.PictureList != nil
}

func (p *MobileGetImageResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("MobileGetImageResponse(%+v)", *p)
}

var fieldIDToName_MobileGetImageResponse = map[int16]string{
	1: "base",
	2: "count",
	3: "picture_list",
}

type AddImagePointTimeRequest struct {
	PictureId int64 `thrift:"picture_id,1,required" frugal:"1,required,i64" json:"picture_id"`
}

func NewAddImagePointTimeRequest() *AddImagePointTimeRequest {
	return &AddImagePointTimeRequest{}
}

func (p *AddImagePointTimeRequest) InitDefault() {
}

func (p *AddImagePointTimeRequest) GetPictureId() (v int64) {
	return p.PictureId
}
func (p *AddImagePointTimeRequest) SetPictureId(val int64) {
	p.PictureId = val
}

func (p *AddImagePointTimeRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AddImagePointTimeRequest(%+v)", *p)
}

var fieldIDToName_AddImagePointTimeRequest = map[int16]string{
	1: "picture_id",
}

type AddImagePointTimeResponse struct {
	Base    *model.BaseResp `thrift:"base,1" frugal:"1,default,model.BaseResp" json:"base"`
	Picture *model.Picture  `thrift:"picture,2,optional" frugal:"2,optional,model.Picture" json:"picture,omitempty"`
}

func NewAddImagePointTimeResponse() *AddImagePointTimeResponse {
	return &AddImagePointTimeResponse{}
}

func (p *AddImagePointTimeResponse) InitDefault() {
}

var AddImagePointTimeResponse_Base_DEFAULT *model.BaseResp

func (p *AddImagePointTimeResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return AddImagePointTimeResponse_Base_DEFAULT
	}
	return p.Base
}

var AddImagePointTimeResponse_Picture_DEFAULT *model.Picture

func (p *AddImagePointTimeResponse) GetPicture() (v *model.Picture) {
	if !p.IsSetPicture() {
		return AddImagePointTimeResponse_Picture_DEFAULT
	}
	return p.Picture
}
func (p *AddImagePointTimeResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}
func (p *AddImagePointTimeResponse) SetPicture(val *model.Picture) {
	p.Picture = val
}

func (p *AddImagePointTimeResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *AddImagePointTimeResponse) IsSetPicture() bool {
	return p.Picture != nil
}

func (p *AddImagePointTimeResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AddImagePointTimeResponse(%+v)", *p)
}

var fieldIDToName_AddImagePointTimeResponse = map[int16]string{
	1: "base",
	2: "picture",
}

type LaunchScreenService interface {
	CreateImage(stream LaunchScreenService_CreateImageServer) (err error)

	GetImage(ctx context.Context, req *GetImageRequest) (r *GetImageResponse, err error)

	ChangeImageProperty(ctx context.Context, req *ChangeImagePropertyRequest) (r *ChangeImagePropertyResponse, err error)

	ChangeImage(stream LaunchScreenService_ChangeImageServer) (err error)

	DeleteImage(ctx context.Context, req *DeleteImageRequest) (r *DeleteImageResponse, err error)

	MobileGetImage(ctx context.Context, req *MobileGetImageRequest) (r *MobileGetImageResponse, err error)

	AddImagePointTime(ctx context.Context, req *AddImagePointTimeRequest) (r *AddImagePointTimeResponse, err error)
}

type LaunchScreenServiceCreateImageArgs struct {
	Req *CreateImageRequest `thrift:"req,1" frugal:"1,default,CreateImageRequest" json:"req"`
}

func NewLaunchScreenServiceCreateImageArgs() *LaunchScreenServiceCreateImageArgs {
	return &LaunchScreenServiceCreateImageArgs{}
}

func (p *LaunchScreenServiceCreateImageArgs) InitDefault() {
}

var LaunchScreenServiceCreateImageArgs_Req_DEFAULT *CreateImageRequest

func (p *LaunchScreenServiceCreateImageArgs) GetReq() (v *CreateImageRequest) {
	if !p.IsSetReq() {
		return LaunchScreenServiceCreateImageArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *LaunchScreenServiceCreateImageArgs) SetReq(val *CreateImageRequest) {
	p.Req = val
}

func (p *LaunchScreenServiceCreateImageArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *LaunchScreenServiceCreateImageArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("LaunchScreenServiceCreateImageArgs(%+v)", *p)
}

var fieldIDToName_LaunchScreenServiceCreateImageArgs = map[int16]string{
	1: "req",
}

type LaunchScreenServiceCreateImageResult struct {
	Success *CreateImageResponse `thrift:"success,0,optional" frugal:"0,optional,CreateImageResponse" json:"success,omitempty"`
}

func NewLaunchScreenServiceCreateImageResult() *LaunchScreenServiceCreateImageResult {
	return &LaunchScreenServiceCreateImageResult{}
}

func (p *LaunchScreenServiceCreateImageResult) InitDefault() {
}

var LaunchScreenServiceCreateImageResult_Success_DEFAULT *CreateImageResponse

func (p *LaunchScreenServiceCreateImageResult) GetSuccess() (v *CreateImageResponse) {
	if !p.IsSetSuccess() {
		return LaunchScreenServiceCreateImageResult_Success_DEFAULT
	}
	return p.Success
}
func (p *LaunchScreenServiceCreateImageResult) SetSuccess(x interface{}) {
	p.Success = x.(*CreateImageResponse)
}

func (p *LaunchScreenServiceCreateImageResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *LaunchScreenServiceCreateImageResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("LaunchScreenServiceCreateImageResult(%+v)", *p)
}

var fieldIDToName_LaunchScreenServiceCreateImageResult = map[int16]string{
	0: "success",
}

type LaunchScreenService_CreateImageServer interface {
	streaming.Stream

	Recv() (*CreateImageRequest, error)

	SendAndClose(*CreateImageResponse) error
}

type LaunchScreenServiceGetImageArgs struct {
	Req *GetImageRequest `thrift:"req,1" frugal:"1,default,GetImageRequest" json:"req"`
}

func NewLaunchScreenServiceGetImageArgs() *LaunchScreenServiceGetImageArgs {
	return &LaunchScreenServiceGetImageArgs{}
}

func (p *LaunchScreenServiceGetImageArgs) InitDefault() {
}

var LaunchScreenServiceGetImageArgs_Req_DEFAULT *GetImageRequest

func (p *LaunchScreenServiceGetImageArgs) GetReq() (v *GetImageRequest) {
	if !p.IsSetReq() {
		return LaunchScreenServiceGetImageArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *LaunchScreenServiceGetImageArgs) SetReq(val *GetImageRequest) {
	p.Req = val
}

func (p *LaunchScreenServiceGetImageArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *LaunchScreenServiceGetImageArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("LaunchScreenServiceGetImageArgs(%+v)", *p)
}

var fieldIDToName_LaunchScreenServiceGetImageArgs = map[int16]string{
	1: "req",
}

type LaunchScreenServiceGetImageResult struct {
	Success *GetImageResponse `thrift:"success,0,optional" frugal:"0,optional,GetImageResponse" json:"success,omitempty"`
}

func NewLaunchScreenServiceGetImageResult() *LaunchScreenServiceGetImageResult {
	return &LaunchScreenServiceGetImageResult{}
}

func (p *LaunchScreenServiceGetImageResult) InitDefault() {
}

var LaunchScreenServiceGetImageResult_Success_DEFAULT *GetImageResponse

func (p *LaunchScreenServiceGetImageResult) GetSuccess() (v *GetImageResponse) {
	if !p.IsSetSuccess() {
		return LaunchScreenServiceGetImageResult_Success_DEFAULT
	}
	return p.Success
}
func (p *LaunchScreenServiceGetImageResult) SetSuccess(x interface{}) {
	p.Success = x.(*GetImageResponse)
}

func (p *LaunchScreenServiceGetImageResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *LaunchScreenServiceGetImageResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("LaunchScreenServiceGetImageResult(%+v)", *p)
}

var fieldIDToName_LaunchScreenServiceGetImageResult = map[int16]string{
	0: "success",
}

type LaunchScreenServiceChangeImagePropertyArgs struct {
	Req *ChangeImagePropertyRequest `thrift:"req,1" frugal:"1,default,ChangeImagePropertyRequest" json:"req"`
}

func NewLaunchScreenServiceChangeImagePropertyArgs() *LaunchScreenServiceChangeImagePropertyArgs {
	return &LaunchScreenServiceChangeImagePropertyArgs{}
}

func (p *LaunchScreenServiceChangeImagePropertyArgs) InitDefault() {
}

var LaunchScreenServiceChangeImagePropertyArgs_Req_DEFAULT *ChangeImagePropertyRequest

func (p *LaunchScreenServiceChangeImagePropertyArgs) GetReq() (v *ChangeImagePropertyRequest) {
	if !p.IsSetReq() {
		return LaunchScreenServiceChangeImagePropertyArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *LaunchScreenServiceChangeImagePropertyArgs) SetReq(val *ChangeImagePropertyRequest) {
	p.Req = val
}

func (p *LaunchScreenServiceChangeImagePropertyArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *LaunchScreenServiceChangeImagePropertyArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("LaunchScreenServiceChangeImagePropertyArgs(%+v)", *p)
}

var fieldIDToName_LaunchScreenServiceChangeImagePropertyArgs = map[int16]string{
	1: "req",
}

type LaunchScreenServiceChangeImagePropertyResult struct {
	Success *ChangeImagePropertyResponse `thrift:"success,0,optional" frugal:"0,optional,ChangeImagePropertyResponse" json:"success,omitempty"`
}

func NewLaunchScreenServiceChangeImagePropertyResult() *LaunchScreenServiceChangeImagePropertyResult {
	return &LaunchScreenServiceChangeImagePropertyResult{}
}

func (p *LaunchScreenServiceChangeImagePropertyResult) InitDefault() {
}

var LaunchScreenServiceChangeImagePropertyResult_Success_DEFAULT *ChangeImagePropertyResponse

func (p *LaunchScreenServiceChangeImagePropertyResult) GetSuccess() (v *ChangeImagePropertyResponse) {
	if !p.IsSetSuccess() {
		return LaunchScreenServiceChangeImagePropertyResult_Success_DEFAULT
	}
	return p.Success
}
func (p *LaunchScreenServiceChangeImagePropertyResult) SetSuccess(x interface{}) {
	p.Success = x.(*ChangeImagePropertyResponse)
}

func (p *LaunchScreenServiceChangeImagePropertyResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *LaunchScreenServiceChangeImagePropertyResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("LaunchScreenServiceChangeImagePropertyResult(%+v)", *p)
}

var fieldIDToName_LaunchScreenServiceChangeImagePropertyResult = map[int16]string{
	0: "success",
}

type LaunchScreenServiceChangeImageArgs struct {
	Req *ChangeImageRequest `thrift:"req,1" frugal:"1,default,ChangeImageRequest" json:"req"`
}

func NewLaunchScreenServiceChangeImageArgs() *LaunchScreenServiceChangeImageArgs {
	return &LaunchScreenServiceChangeImageArgs{}
}

func (p *LaunchScreenServiceChangeImageArgs) InitDefault() {
}

var LaunchScreenServiceChangeImageArgs_Req_DEFAULT *ChangeImageRequest

func (p *LaunchScreenServiceChangeImageArgs) GetReq() (v *ChangeImageRequest) {
	if !p.IsSetReq() {
		return LaunchScreenServiceChangeImageArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *LaunchScreenServiceChangeImageArgs) SetReq(val *ChangeImageRequest) {
	p.Req = val
}

func (p *LaunchScreenServiceChangeImageArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *LaunchScreenServiceChangeImageArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("LaunchScreenServiceChangeImageArgs(%+v)", *p)
}

var fieldIDToName_LaunchScreenServiceChangeImageArgs = map[int16]string{
	1: "req",
}

type LaunchScreenServiceChangeImageResult struct {
	Success *ChangeImageResponse `thrift:"success,0,optional" frugal:"0,optional,ChangeImageResponse" json:"success,omitempty"`
}

func NewLaunchScreenServiceChangeImageResult() *LaunchScreenServiceChangeImageResult {
	return &LaunchScreenServiceChangeImageResult{}
}

func (p *LaunchScreenServiceChangeImageResult) InitDefault() {
}

var LaunchScreenServiceChangeImageResult_Success_DEFAULT *ChangeImageResponse

func (p *LaunchScreenServiceChangeImageResult) GetSuccess() (v *ChangeImageResponse) {
	if !p.IsSetSuccess() {
		return LaunchScreenServiceChangeImageResult_Success_DEFAULT
	}
	return p.Success
}
func (p *LaunchScreenServiceChangeImageResult) SetSuccess(x interface{}) {
	p.Success = x.(*ChangeImageResponse)
}

func (p *LaunchScreenServiceChangeImageResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *LaunchScreenServiceChangeImageResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("LaunchScreenServiceChangeImageResult(%+v)", *p)
}

var fieldIDToName_LaunchScreenServiceChangeImageResult = map[int16]string{
	0: "success",
}

type LaunchScreenService_ChangeImageServer interface {
	streaming.Stream

	Recv() (*ChangeImageRequest, error)

	SendAndClose(*ChangeImageResponse) error
}

type LaunchScreenServiceDeleteImageArgs struct {
	Req *DeleteImageRequest `thrift:"req,1" frugal:"1,default,DeleteImageRequest" json:"req"`
}

func NewLaunchScreenServiceDeleteImageArgs() *LaunchScreenServiceDeleteImageArgs {
	return &LaunchScreenServiceDeleteImageArgs{}
}

func (p *LaunchScreenServiceDeleteImageArgs) InitDefault() {
}

var LaunchScreenServiceDeleteImageArgs_Req_DEFAULT *DeleteImageRequest

func (p *LaunchScreenServiceDeleteImageArgs) GetReq() (v *DeleteImageRequest) {
	if !p.IsSetReq() {
		return LaunchScreenServiceDeleteImageArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *LaunchScreenServiceDeleteImageArgs) SetReq(val *DeleteImageRequest) {
	p.Req = val
}

func (p *LaunchScreenServiceDeleteImageArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *LaunchScreenServiceDeleteImageArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("LaunchScreenServiceDeleteImageArgs(%+v)", *p)
}

var fieldIDToName_LaunchScreenServiceDeleteImageArgs = map[int16]string{
	1: "req",
}

type LaunchScreenServiceDeleteImageResult struct {
	Success *DeleteImageResponse `thrift:"success,0,optional" frugal:"0,optional,DeleteImageResponse" json:"success,omitempty"`
}

func NewLaunchScreenServiceDeleteImageResult() *LaunchScreenServiceDeleteImageResult {
	return &LaunchScreenServiceDeleteImageResult{}
}

func (p *LaunchScreenServiceDeleteImageResult) InitDefault() {
}

var LaunchScreenServiceDeleteImageResult_Success_DEFAULT *DeleteImageResponse

func (p *LaunchScreenServiceDeleteImageResult) GetSuccess() (v *DeleteImageResponse) {
	if !p.IsSetSuccess() {
		return LaunchScreenServiceDeleteImageResult_Success_DEFAULT
	}
	return p.Success
}
func (p *LaunchScreenServiceDeleteImageResult) SetSuccess(x interface{}) {
	p.Success = x.(*DeleteImageResponse)
}

func (p *LaunchScreenServiceDeleteImageResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *LaunchScreenServiceDeleteImageResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("LaunchScreenServiceDeleteImageResult(%+v)", *p)
}

var fieldIDToName_LaunchScreenServiceDeleteImageResult = map[int16]string{
	0: "success",
}

type LaunchScreenServiceMobileGetImageArgs struct {
	Req *MobileGetImageRequest `thrift:"req,1" frugal:"1,default,MobileGetImageRequest" json:"req"`
}

func NewLaunchScreenServiceMobileGetImageArgs() *LaunchScreenServiceMobileGetImageArgs {
	return &LaunchScreenServiceMobileGetImageArgs{}
}

func (p *LaunchScreenServiceMobileGetImageArgs) InitDefault() {
}

var LaunchScreenServiceMobileGetImageArgs_Req_DEFAULT *MobileGetImageRequest

func (p *LaunchScreenServiceMobileGetImageArgs) GetReq() (v *MobileGetImageRequest) {
	if !p.IsSetReq() {
		return LaunchScreenServiceMobileGetImageArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *LaunchScreenServiceMobileGetImageArgs) SetReq(val *MobileGetImageRequest) {
	p.Req = val
}

func (p *LaunchScreenServiceMobileGetImageArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *LaunchScreenServiceMobileGetImageArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("LaunchScreenServiceMobileGetImageArgs(%+v)", *p)
}

var fieldIDToName_LaunchScreenServiceMobileGetImageArgs = map[int16]string{
	1: "req",
}

type LaunchScreenServiceMobileGetImageResult struct {
	Success *MobileGetImageResponse `thrift:"success,0,optional" frugal:"0,optional,MobileGetImageResponse" json:"success,omitempty"`
}

func NewLaunchScreenServiceMobileGetImageResult() *LaunchScreenServiceMobileGetImageResult {
	return &LaunchScreenServiceMobileGetImageResult{}
}

func (p *LaunchScreenServiceMobileGetImageResult) InitDefault() {
}

var LaunchScreenServiceMobileGetImageResult_Success_DEFAULT *MobileGetImageResponse

func (p *LaunchScreenServiceMobileGetImageResult) GetSuccess() (v *MobileGetImageResponse) {
	if !p.IsSetSuccess() {
		return LaunchScreenServiceMobileGetImageResult_Success_DEFAULT
	}
	return p.Success
}
func (p *LaunchScreenServiceMobileGetImageResult) SetSuccess(x interface{}) {
	p.Success = x.(*MobileGetImageResponse)
}

func (p *LaunchScreenServiceMobileGetImageResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *LaunchScreenServiceMobileGetImageResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("LaunchScreenServiceMobileGetImageResult(%+v)", *p)
}

var fieldIDToName_LaunchScreenServiceMobileGetImageResult = map[int16]string{
	0: "success",
}

type LaunchScreenServiceAddImagePointTimeArgs struct {
	Req *AddImagePointTimeRequest `thrift:"req,1" frugal:"1,default,AddImagePointTimeRequest" json:"req"`
}

func NewLaunchScreenServiceAddImagePointTimeArgs() *LaunchScreenServiceAddImagePointTimeArgs {
	return &LaunchScreenServiceAddImagePointTimeArgs{}
}

func (p *LaunchScreenServiceAddImagePointTimeArgs) InitDefault() {
}

var LaunchScreenServiceAddImagePointTimeArgs_Req_DEFAULT *AddImagePointTimeRequest

func (p *LaunchScreenServiceAddImagePointTimeArgs) GetReq() (v *AddImagePointTimeRequest) {
	if !p.IsSetReq() {
		return LaunchScreenServiceAddImagePointTimeArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *LaunchScreenServiceAddImagePointTimeArgs) SetReq(val *AddImagePointTimeRequest) {
	p.Req = val
}

func (p *LaunchScreenServiceAddImagePointTimeArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *LaunchScreenServiceAddImagePointTimeArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("LaunchScreenServiceAddImagePointTimeArgs(%+v)", *p)
}

var fieldIDToName_LaunchScreenServiceAddImagePointTimeArgs = map[int16]string{
	1: "req",
}

type LaunchScreenServiceAddImagePointTimeResult struct {
	Success *AddImagePointTimeResponse `thrift:"success,0,optional" frugal:"0,optional,AddImagePointTimeResponse" json:"success,omitempty"`
}

func NewLaunchScreenServiceAddImagePointTimeResult() *LaunchScreenServiceAddImagePointTimeResult {
	return &LaunchScreenServiceAddImagePointTimeResult{}
}

func (p *LaunchScreenServiceAddImagePointTimeResult) InitDefault() {
}

var LaunchScreenServiceAddImagePointTimeResult_Success_DEFAULT *AddImagePointTimeResponse

func (p *LaunchScreenServiceAddImagePointTimeResult) GetSuccess() (v *AddImagePointTimeResponse) {
	if !p.IsSetSuccess() {
		return LaunchScreenServiceAddImagePointTimeResult_Success_DEFAULT
	}
	return p.Success
}
func (p *LaunchScreenServiceAddImagePointTimeResult) SetSuccess(x interface{}) {
	p.Success = x.(*AddImagePointTimeResponse)
}

func (p *LaunchScreenServiceAddImagePointTimeResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *LaunchScreenServiceAddImagePointTimeResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("LaunchScreenServiceAddImagePointTimeResult(%+v)", *p)
}

var fieldIDToName_LaunchScreenServiceAddImagePointTimeResult = map[int16]string{
	0: "success",
}
