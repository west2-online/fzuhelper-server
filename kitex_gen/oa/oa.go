// Code generated by thriftgo (0.4.3). DO NOT EDIT.

package oa

import (
	"context"
	"fmt"
	"github.com/west2-online/fzuhelper-server/kitex_gen/model"
)

type CreateFeedbackRequest struct {
	ReportId       int64  `thrift:"reportId,1,required" frugal:"1,required,i64" json:"reportId"`
	StuId          string `thrift:"stuId,2,required" frugal:"2,required,string" json:"stuId"`
	Name           string `thrift:"name,3,required" frugal:"3,required,string" json:"name"`
	College        string `thrift:"college,4,required" frugal:"4,required,string" json:"college"`
	ContactPhone   string `thrift:"contactPhone,5,required" frugal:"5,required,string" json:"contactPhone"`
	ContactQQ      string `thrift:"contactQQ,6,required" frugal:"6,required,string" json:"contactQQ"`
	ContactEmail   string `thrift:"contactEmail,7,required" frugal:"7,required,string" json:"contactEmail"`
	NetworkEnv     string `thrift:"networkEnv,8,required" frugal:"8,required,string" json:"networkEnv"`
	IsOnCampus     bool   `thrift:"isOnCampus,9,required" frugal:"9,required,bool" json:"isOnCampus"`
	OsName         string `thrift:"osName,10,required" frugal:"10,required,string" json:"osName"`
	OsVersion      string `thrift:"osVersion,11,required" frugal:"11,required,string" json:"osVersion"`
	Manufacturer   string `thrift:"manufacturer,12,required" frugal:"12,required,string" json:"manufacturer"`
	DeviceModel    string `thrift:"deviceModel,13,required" frugal:"13,required,string" json:"deviceModel"`
	ProblemDesc    string `thrift:"problemDesc,14,required" frugal:"14,required,string" json:"problemDesc"`
	Screenshots    string `thrift:"screenshots,15,required" frugal:"15,required,string" json:"screenshots"`
	AppVersion     string `thrift:"appVersion,16,required" frugal:"16,required,string" json:"appVersion"`
	VersionHistory string `thrift:"versionHistory,17,required" frugal:"17,required,string" json:"versionHistory"`
	NetworkTraces  string `thrift:"networkTraces,18,required" frugal:"18,required,string" json:"networkTraces"`
	Events         string `thrift:"events,19,required" frugal:"19,required,string" json:"events"`
	UserSettings   string `thrift:"userSettings,20,required" frugal:"20,required,string" json:"userSettings"`
}

func NewCreateFeedbackRequest() *CreateFeedbackRequest {
	return &CreateFeedbackRequest{}
}

func (p *CreateFeedbackRequest) InitDefault() {
}

func (p *CreateFeedbackRequest) GetReportId() (v int64) {
	return p.ReportId
}

func (p *CreateFeedbackRequest) GetStuId() (v string) {
	return p.StuId
}

func (p *CreateFeedbackRequest) GetName() (v string) {
	return p.Name
}

func (p *CreateFeedbackRequest) GetCollege() (v string) {
	return p.College
}

func (p *CreateFeedbackRequest) GetContactPhone() (v string) {
	return p.ContactPhone
}

func (p *CreateFeedbackRequest) GetContactQQ() (v string) {
	return p.ContactQQ
}

func (p *CreateFeedbackRequest) GetContactEmail() (v string) {
	return p.ContactEmail
}

func (p *CreateFeedbackRequest) GetNetworkEnv() (v string) {
	return p.NetworkEnv
}

func (p *CreateFeedbackRequest) GetIsOnCampus() (v bool) {
	return p.IsOnCampus
}

func (p *CreateFeedbackRequest) GetOsName() (v string) {
	return p.OsName
}

func (p *CreateFeedbackRequest) GetOsVersion() (v string) {
	return p.OsVersion
}

func (p *CreateFeedbackRequest) GetManufacturer() (v string) {
	return p.Manufacturer
}

func (p *CreateFeedbackRequest) GetDeviceModel() (v string) {
	return p.DeviceModel
}

func (p *CreateFeedbackRequest) GetProblemDesc() (v string) {
	return p.ProblemDesc
}

func (p *CreateFeedbackRequest) GetScreenshots() (v string) {
	return p.Screenshots
}

func (p *CreateFeedbackRequest) GetAppVersion() (v string) {
	return p.AppVersion
}

func (p *CreateFeedbackRequest) GetVersionHistory() (v string) {
	return p.VersionHistory
}

func (p *CreateFeedbackRequest) GetNetworkTraces() (v string) {
	return p.NetworkTraces
}

func (p *CreateFeedbackRequest) GetEvents() (v string) {
	return p.Events
}

func (p *CreateFeedbackRequest) GetUserSettings() (v string) {
	return p.UserSettings
}
func (p *CreateFeedbackRequest) SetReportId(val int64) {
	p.ReportId = val
}
func (p *CreateFeedbackRequest) SetStuId(val string) {
	p.StuId = val
}
func (p *CreateFeedbackRequest) SetName(val string) {
	p.Name = val
}
func (p *CreateFeedbackRequest) SetCollege(val string) {
	p.College = val
}
func (p *CreateFeedbackRequest) SetContactPhone(val string) {
	p.ContactPhone = val
}
func (p *CreateFeedbackRequest) SetContactQQ(val string) {
	p.ContactQQ = val
}
func (p *CreateFeedbackRequest) SetContactEmail(val string) {
	p.ContactEmail = val
}
func (p *CreateFeedbackRequest) SetNetworkEnv(val string) {
	p.NetworkEnv = val
}
func (p *CreateFeedbackRequest) SetIsOnCampus(val bool) {
	p.IsOnCampus = val
}
func (p *CreateFeedbackRequest) SetOsName(val string) {
	p.OsName = val
}
func (p *CreateFeedbackRequest) SetOsVersion(val string) {
	p.OsVersion = val
}
func (p *CreateFeedbackRequest) SetManufacturer(val string) {
	p.Manufacturer = val
}
func (p *CreateFeedbackRequest) SetDeviceModel(val string) {
	p.DeviceModel = val
}
func (p *CreateFeedbackRequest) SetProblemDesc(val string) {
	p.ProblemDesc = val
}
func (p *CreateFeedbackRequest) SetScreenshots(val string) {
	p.Screenshots = val
}
func (p *CreateFeedbackRequest) SetAppVersion(val string) {
	p.AppVersion = val
}
func (p *CreateFeedbackRequest) SetVersionHistory(val string) {
	p.VersionHistory = val
}
func (p *CreateFeedbackRequest) SetNetworkTraces(val string) {
	p.NetworkTraces = val
}
func (p *CreateFeedbackRequest) SetEvents(val string) {
	p.Events = val
}
func (p *CreateFeedbackRequest) SetUserSettings(val string) {
	p.UserSettings = val
}

func (p *CreateFeedbackRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CreateFeedbackRequest(%+v)", *p)
}

var fieldIDToName_CreateFeedbackRequest = map[int16]string{
	1:  "reportId",
	2:  "stuId",
	3:  "name",
	4:  "college",
	5:  "contactPhone",
	6:  "contactQQ",
	7:  "contactEmail",
	8:  "networkEnv",
	9:  "isOnCampus",
	10: "osName",
	11: "osVersion",
	12: "manufacturer",
	13: "deviceModel",
	14: "problemDesc",
	15: "screenshots",
	16: "appVersion",
	17: "versionHistory",
	18: "networkTraces",
	19: "events",
	20: "userSettings",
}

type CreateFeedbackResponse struct {
	Base *model.BaseResp `thrift:"base,1,required" frugal:"1,required,model.BaseResp" json:"base"`
}

func NewCreateFeedbackResponse() *CreateFeedbackResponse {
	return &CreateFeedbackResponse{}
}

func (p *CreateFeedbackResponse) InitDefault() {
}

var CreateFeedbackResponse_Base_DEFAULT *model.BaseResp

func (p *CreateFeedbackResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return CreateFeedbackResponse_Base_DEFAULT
	}
	return p.Base
}
func (p *CreateFeedbackResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}

func (p *CreateFeedbackResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *CreateFeedbackResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CreateFeedbackResponse(%+v)", *p)
}

var fieldIDToName_CreateFeedbackResponse = map[int16]string{
	1: "base",
}

type GetFeedbackRequest struct {
	ReportId int64 `thrift:"reportId,1,required" frugal:"1,required,i64" json:"reportId"`
}

func NewGetFeedbackRequest() *GetFeedbackRequest {
	return &GetFeedbackRequest{}
}

func (p *GetFeedbackRequest) InitDefault() {
}

func (p *GetFeedbackRequest) GetReportId() (v int64) {
	return p.ReportId
}
func (p *GetFeedbackRequest) SetReportId(val int64) {
	p.ReportId = val
}

func (p *GetFeedbackRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetFeedbackRequest(%+v)", *p)
}

var fieldIDToName_GetFeedbackRequest = map[int16]string{
	1: "reportId",
}

type GetFeedbackResponse struct {
	Base *model.BaseResp `thrift:"base,1,required" frugal:"1,required,model.BaseResp" json:"base"`
	Data *model.Feedback `thrift:"data,2,optional" frugal:"2,optional,model.Feedback" json:"data,omitempty"`
}

func NewGetFeedbackResponse() *GetFeedbackResponse {
	return &GetFeedbackResponse{}
}

func (p *GetFeedbackResponse) InitDefault() {
}

var GetFeedbackResponse_Base_DEFAULT *model.BaseResp

func (p *GetFeedbackResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return GetFeedbackResponse_Base_DEFAULT
	}
	return p.Base
}

var GetFeedbackResponse_Data_DEFAULT *model.Feedback

func (p *GetFeedbackResponse) GetData() (v *model.Feedback) {
	if !p.IsSetData() {
		return GetFeedbackResponse_Data_DEFAULT
	}
	return p.Data
}
func (p *GetFeedbackResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}
func (p *GetFeedbackResponse) SetData(val *model.Feedback) {
	p.Data = val
}

func (p *GetFeedbackResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *GetFeedbackResponse) IsSetData() bool {
	return p.Data != nil
}

func (p *GetFeedbackResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetFeedbackResponse(%+v)", *p)
}

var fieldIDToName_GetFeedbackResponse = map[int16]string{
	1: "base",
	2: "data",
}

type OaService interface {
	CreateFeedback(ctx context.Context, request *CreateFeedbackRequest) (r *CreateFeedbackResponse, err error)

	GetFeedback(ctx context.Context, request *GetFeedbackRequest) (r *GetFeedbackResponse, err error)
}

type OaServiceCreateFeedbackArgs struct {
	Request *CreateFeedbackRequest `thrift:"request,1" frugal:"1,default,CreateFeedbackRequest" json:"request"`
}

func NewOaServiceCreateFeedbackArgs() *OaServiceCreateFeedbackArgs {
	return &OaServiceCreateFeedbackArgs{}
}

func (p *OaServiceCreateFeedbackArgs) InitDefault() {
}

var OaServiceCreateFeedbackArgs_Request_DEFAULT *CreateFeedbackRequest

func (p *OaServiceCreateFeedbackArgs) GetRequest() (v *CreateFeedbackRequest) {
	if !p.IsSetRequest() {
		return OaServiceCreateFeedbackArgs_Request_DEFAULT
	}
	return p.Request
}
func (p *OaServiceCreateFeedbackArgs) SetRequest(val *CreateFeedbackRequest) {
	p.Request = val
}

func (p *OaServiceCreateFeedbackArgs) IsSetRequest() bool {
	return p.Request != nil
}

func (p *OaServiceCreateFeedbackArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("OaServiceCreateFeedbackArgs(%+v)", *p)
}

var fieldIDToName_OaServiceCreateFeedbackArgs = map[int16]string{
	1: "request",
}

type OaServiceCreateFeedbackResult struct {
	Success *CreateFeedbackResponse `thrift:"success,0,optional" frugal:"0,optional,CreateFeedbackResponse" json:"success,omitempty"`
}

func NewOaServiceCreateFeedbackResult() *OaServiceCreateFeedbackResult {
	return &OaServiceCreateFeedbackResult{}
}

func (p *OaServiceCreateFeedbackResult) InitDefault() {
}

var OaServiceCreateFeedbackResult_Success_DEFAULT *CreateFeedbackResponse

func (p *OaServiceCreateFeedbackResult) GetSuccess() (v *CreateFeedbackResponse) {
	if !p.IsSetSuccess() {
		return OaServiceCreateFeedbackResult_Success_DEFAULT
	}
	return p.Success
}
func (p *OaServiceCreateFeedbackResult) SetSuccess(x interface{}) {
	p.Success = x.(*CreateFeedbackResponse)
}

func (p *OaServiceCreateFeedbackResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *OaServiceCreateFeedbackResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("OaServiceCreateFeedbackResult(%+v)", *p)
}

var fieldIDToName_OaServiceCreateFeedbackResult = map[int16]string{
	0: "success",
}

type OaServiceGetFeedbackArgs struct {
	Request *GetFeedbackRequest `thrift:"request,1" frugal:"1,default,GetFeedbackRequest" json:"request"`
}

func NewOaServiceGetFeedbackArgs() *OaServiceGetFeedbackArgs {
	return &OaServiceGetFeedbackArgs{}
}

func (p *OaServiceGetFeedbackArgs) InitDefault() {
}

var OaServiceGetFeedbackArgs_Request_DEFAULT *GetFeedbackRequest

func (p *OaServiceGetFeedbackArgs) GetRequest() (v *GetFeedbackRequest) {
	if !p.IsSetRequest() {
		return OaServiceGetFeedbackArgs_Request_DEFAULT
	}
	return p.Request
}
func (p *OaServiceGetFeedbackArgs) SetRequest(val *GetFeedbackRequest) {
	p.Request = val
}

func (p *OaServiceGetFeedbackArgs) IsSetRequest() bool {
	return p.Request != nil
}

func (p *OaServiceGetFeedbackArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("OaServiceGetFeedbackArgs(%+v)", *p)
}

var fieldIDToName_OaServiceGetFeedbackArgs = map[int16]string{
	1: "request",
}

type OaServiceGetFeedbackResult struct {
	Success *GetFeedbackResponse `thrift:"success,0,optional" frugal:"0,optional,GetFeedbackResponse" json:"success,omitempty"`
}

func NewOaServiceGetFeedbackResult() *OaServiceGetFeedbackResult {
	return &OaServiceGetFeedbackResult{}
}

func (p *OaServiceGetFeedbackResult) InitDefault() {
}

var OaServiceGetFeedbackResult_Success_DEFAULT *GetFeedbackResponse

func (p *OaServiceGetFeedbackResult) GetSuccess() (v *GetFeedbackResponse) {
	if !p.IsSetSuccess() {
		return OaServiceGetFeedbackResult_Success_DEFAULT
	}
	return p.Success
}
func (p *OaServiceGetFeedbackResult) SetSuccess(x interface{}) {
	p.Success = x.(*GetFeedbackResponse)
}

func (p *OaServiceGetFeedbackResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *OaServiceGetFeedbackResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("OaServiceGetFeedbackResult(%+v)", *p)
}

var fieldIDToName_OaServiceGetFeedbackResult = map[int16]string{
	0: "success",
}
