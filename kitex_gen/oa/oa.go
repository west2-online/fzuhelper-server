// Code generated by thriftgo (0.4.3). DO NOT EDIT.

package oa

import (
	"context"
	"fmt"
	"github.com/west2-online/fzuhelper-server/kitex_gen/model"
)

type CreateFeedbackRequest struct {
	StuId          string `thrift:"stu_id,1,required" frugal:"1,required,string" json:"stu_id"`
	Name           string `thrift:"name,2,required" frugal:"2,required,string" json:"name"`
	College        string `thrift:"college,3,required" frugal:"3,required,string" json:"college"`
	ContactPhone   string `thrift:"contact_phone,4,required" frugal:"4,required,string" json:"contact_phone"`
	ContactQq      string `thrift:"contact_qq,5,required" frugal:"5,required,string" json:"contact_qq"`
	ContactEmail   string `thrift:"contact_email,6,required" frugal:"6,required,string" json:"contact_email"`
	NetworkEnv     string `thrift:"network_env,7,required" frugal:"7,required,string" json:"network_env"`
	IsOnCampus     bool   `thrift:"is_on_campus,8,required" frugal:"8,required,bool" json:"is_on_campus"`
	OsName         string `thrift:"os_name,9,required" frugal:"9,required,string" json:"os_name"`
	OsVersion      string `thrift:"os_version,10,required" frugal:"10,required,string" json:"os_version"`
	Manufacturer   string `thrift:"manufacturer,11,required" frugal:"11,required,string" json:"manufacturer"`
	DeviceModel    string `thrift:"device_model,12,required" frugal:"12,required,string" json:"device_model"`
	ProblemDesc    string `thrift:"problem_desc,13,required" frugal:"13,required,string" json:"problem_desc"`
	Screenshots    string `thrift:"screenshots,14,required" frugal:"14,required,string" json:"screenshots"`
	AppVersion     string `thrift:"app_version,15,required" frugal:"15,required,string" json:"app_version"`
	VersionHistory string `thrift:"version_history,16,required" frugal:"16,required,string" json:"version_history"`
	NetworkTraces  string `thrift:"network_traces,17,required" frugal:"17,required,string" json:"network_traces"`
	Events         string `thrift:"events,18,required" frugal:"18,required,string" json:"events"`
	UserSettings   string `thrift:"user_settings,19,required" frugal:"19,required,string" json:"user_settings"`
}

func NewCreateFeedbackRequest() *CreateFeedbackRequest {
	return &CreateFeedbackRequest{}
}

func (p *CreateFeedbackRequest) InitDefault() {
}

func (p *CreateFeedbackRequest) GetStuId() (v string) {
	return p.StuId
}

func (p *CreateFeedbackRequest) GetName() (v string) {
	return p.Name
}

func (p *CreateFeedbackRequest) GetCollege() (v string) {
	return p.College
}

func (p *CreateFeedbackRequest) GetContactPhone() (v string) {
	return p.ContactPhone
}

func (p *CreateFeedbackRequest) GetContactQq() (v string) {
	return p.ContactQq
}

func (p *CreateFeedbackRequest) GetContactEmail() (v string) {
	return p.ContactEmail
}

func (p *CreateFeedbackRequest) GetNetworkEnv() (v string) {
	return p.NetworkEnv
}

func (p *CreateFeedbackRequest) GetIsOnCampus() (v bool) {
	return p.IsOnCampus
}

func (p *CreateFeedbackRequest) GetOsName() (v string) {
	return p.OsName
}

func (p *CreateFeedbackRequest) GetOsVersion() (v string) {
	return p.OsVersion
}

func (p *CreateFeedbackRequest) GetManufacturer() (v string) {
	return p.Manufacturer
}

func (p *CreateFeedbackRequest) GetDeviceModel() (v string) {
	return p.DeviceModel
}

func (p *CreateFeedbackRequest) GetProblemDesc() (v string) {
	return p.ProblemDesc
}

func (p *CreateFeedbackRequest) GetScreenshots() (v string) {
	return p.Screenshots
}

func (p *CreateFeedbackRequest) GetAppVersion() (v string) {
	return p.AppVersion
}

func (p *CreateFeedbackRequest) GetVersionHistory() (v string) {
	return p.VersionHistory
}

func (p *CreateFeedbackRequest) GetNetworkTraces() (v string) {
	return p.NetworkTraces
}

func (p *CreateFeedbackRequest) GetEvents() (v string) {
	return p.Events
}

func (p *CreateFeedbackRequest) GetUserSettings() (v string) {
	return p.UserSettings
}
func (p *CreateFeedbackRequest) SetStuId(val string) {
	p.StuId = val
}
func (p *CreateFeedbackRequest) SetName(val string) {
	p.Name = val
}
func (p *CreateFeedbackRequest) SetCollege(val string) {
	p.College = val
}
func (p *CreateFeedbackRequest) SetContactPhone(val string) {
	p.ContactPhone = val
}
func (p *CreateFeedbackRequest) SetContactQq(val string) {
	p.ContactQq = val
}
func (p *CreateFeedbackRequest) SetContactEmail(val string) {
	p.ContactEmail = val
}
func (p *CreateFeedbackRequest) SetNetworkEnv(val string) {
	p.NetworkEnv = val
}
func (p *CreateFeedbackRequest) SetIsOnCampus(val bool) {
	p.IsOnCampus = val
}
func (p *CreateFeedbackRequest) SetOsName(val string) {
	p.OsName = val
}
func (p *CreateFeedbackRequest) SetOsVersion(val string) {
	p.OsVersion = val
}
func (p *CreateFeedbackRequest) SetManufacturer(val string) {
	p.Manufacturer = val
}
func (p *CreateFeedbackRequest) SetDeviceModel(val string) {
	p.DeviceModel = val
}
func (p *CreateFeedbackRequest) SetProblemDesc(val string) {
	p.ProblemDesc = val
}
func (p *CreateFeedbackRequest) SetScreenshots(val string) {
	p.Screenshots = val
}
func (p *CreateFeedbackRequest) SetAppVersion(val string) {
	p.AppVersion = val
}
func (p *CreateFeedbackRequest) SetVersionHistory(val string) {
	p.VersionHistory = val
}
func (p *CreateFeedbackRequest) SetNetworkTraces(val string) {
	p.NetworkTraces = val
}
func (p *CreateFeedbackRequest) SetEvents(val string) {
	p.Events = val
}
func (p *CreateFeedbackRequest) SetUserSettings(val string) {
	p.UserSettings = val
}

func (p *CreateFeedbackRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CreateFeedbackRequest(%+v)", *p)
}

var fieldIDToName_CreateFeedbackRequest = map[int16]string{
	1:  "stu_id",
	2:  "name",
	3:  "college",
	4:  "contact_phone",
	5:  "contact_qq",
	6:  "contact_email",
	7:  "network_env",
	8:  "is_on_campus",
	9:  "os_name",
	10: "os_version",
	11: "manufacturer",
	12: "device_model",
	13: "problem_desc",
	14: "screenshots",
	15: "app_version",
	16: "version_history",
	17: "network_traces",
	18: "events",
	19: "user_settings",
}

type CreateFeedbackResponse struct {
	Base     *model.BaseResp `thrift:"base,1,required" frugal:"1,required,model.BaseResp" json:"base"`
	ReportId int64           `thrift:"report_id,2,required" frugal:"2,required,i64" json:"report_id"`
}

func NewCreateFeedbackResponse() *CreateFeedbackResponse {
	return &CreateFeedbackResponse{}
}

func (p *CreateFeedbackResponse) InitDefault() {
}

var CreateFeedbackResponse_Base_DEFAULT *model.BaseResp

func (p *CreateFeedbackResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return CreateFeedbackResponse_Base_DEFAULT
	}
	return p.Base
}

func (p *CreateFeedbackResponse) GetReportId() (v int64) {
	return p.ReportId
}
func (p *CreateFeedbackResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}
func (p *CreateFeedbackResponse) SetReportId(val int64) {
	p.ReportId = val
}

func (p *CreateFeedbackResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *CreateFeedbackResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CreateFeedbackResponse(%+v)", *p)
}

var fieldIDToName_CreateFeedbackResponse = map[int16]string{
	1: "base",
	2: "report_id",
}

type GetFeedbackByIDRequest struct {
	ReportId int64 `thrift:"report_id,1,required" frugal:"1,required,i64" json:"report_id"`
}

func NewGetFeedbackByIDRequest() *GetFeedbackByIDRequest {
	return &GetFeedbackByIDRequest{}
}

func (p *GetFeedbackByIDRequest) InitDefault() {
}

func (p *GetFeedbackByIDRequest) GetReportId() (v int64) {
	return p.ReportId
}
func (p *GetFeedbackByIDRequest) SetReportId(val int64) {
	p.ReportId = val
}

func (p *GetFeedbackByIDRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetFeedbackByIDRequest(%+v)", *p)
}

var fieldIDToName_GetFeedbackByIDRequest = map[int16]string{
	1: "report_id",
}

type FeedbackDetailResponse struct {
	Base *model.BaseResp `thrift:"base,1,required" frugal:"1,required,model.BaseResp" json:"base"`
	Data *model.Feedback `thrift:"data,2,optional" frugal:"2,optional,model.Feedback" json:"data,omitempty"`
}

func NewFeedbackDetailResponse() *FeedbackDetailResponse {
	return &FeedbackDetailResponse{}
}

func (p *FeedbackDetailResponse) InitDefault() {
}

var FeedbackDetailResponse_Base_DEFAULT *model.BaseResp

func (p *FeedbackDetailResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return FeedbackDetailResponse_Base_DEFAULT
	}
	return p.Base
}

var FeedbackDetailResponse_Data_DEFAULT *model.Feedback

func (p *FeedbackDetailResponse) GetData() (v *model.Feedback) {
	if !p.IsSetData() {
		return FeedbackDetailResponse_Data_DEFAULT
	}
	return p.Data
}
func (p *FeedbackDetailResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}
func (p *FeedbackDetailResponse) SetData(val *model.Feedback) {
	p.Data = val
}

func (p *FeedbackDetailResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *FeedbackDetailResponse) IsSetData() bool {
	return p.Data != nil
}

func (p *FeedbackDetailResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("FeedbackDetailResponse(%+v)", *p)
}

var fieldIDToName_FeedbackDetailResponse = map[int16]string{
	1: "base",
	2: "data",
}

type GetListFeedbackRequest struct {
	StuId       *string `thrift:"stu_id,1,optional" frugal:"1,optional,string" json:"stu_id,omitempty"`
	Name        *string `thrift:"name,2,optional" frugal:"2,optional,string" json:"name,omitempty"`
	NetworkEnv  *string `thrift:"network_env,3,optional" frugal:"3,optional,string" json:"network_env,omitempty"`
	IsOnCampus  *bool   `thrift:"is_on_campus,4,optional" frugal:"4,optional,bool" json:"is_on_campus,omitempty"`
	OsName      *string `thrift:"os_name,5,optional" frugal:"5,optional,string" json:"os_name,omitempty"`
	ProblemDesc *string `thrift:"problem_desc,6,optional" frugal:"6,optional,string" json:"problem_desc,omitempty"`
	AppVersion  *string `thrift:"app_version,7,optional" frugal:"7,optional,string" json:"app_version,omitempty"`
	BeginTimeMs *int64  `thrift:"begin_time_ms,8,optional" frugal:"8,optional,i64" json:"begin_time_ms,omitempty"`
	EndTimeMs   *int64  `thrift:"end_time_ms,9,optional" frugal:"9,optional,i64" json:"end_time_ms,omitempty"`
	Limit       *int64  `thrift:"limit,10,optional" frugal:"10,optional,i64" json:"limit,omitempty"`
	PageToken   *int64  `thrift:"page_token,11,optional" frugal:"11,optional,i64" json:"page_token,omitempty"`
	OrderDesc   *bool   `thrift:"order_desc,12,optional" frugal:"12,optional,bool" json:"order_desc,omitempty"`
}

func NewGetListFeedbackRequest() *GetListFeedbackRequest {
	return &GetListFeedbackRequest{}
}

func (p *GetListFeedbackRequest) InitDefault() {
}

var GetListFeedbackRequest_StuId_DEFAULT string

func (p *GetListFeedbackRequest) GetStuId() (v string) {
	if !p.IsSetStuId() {
		return GetListFeedbackRequest_StuId_DEFAULT
	}
	return *p.StuId
}

var GetListFeedbackRequest_Name_DEFAULT string

func (p *GetListFeedbackRequest) GetName() (v string) {
	if !p.IsSetName() {
		return GetListFeedbackRequest_Name_DEFAULT
	}
	return *p.Name
}

var GetListFeedbackRequest_NetworkEnv_DEFAULT string

func (p *GetListFeedbackRequest) GetNetworkEnv() (v string) {
	if !p.IsSetNetworkEnv() {
		return GetListFeedbackRequest_NetworkEnv_DEFAULT
	}
	return *p.NetworkEnv
}

var GetListFeedbackRequest_IsOnCampus_DEFAULT bool

func (p *GetListFeedbackRequest) GetIsOnCampus() (v bool) {
	if !p.IsSetIsOnCampus() {
		return GetListFeedbackRequest_IsOnCampus_DEFAULT
	}
	return *p.IsOnCampus
}

var GetListFeedbackRequest_OsName_DEFAULT string

func (p *GetListFeedbackRequest) GetOsName() (v string) {
	if !p.IsSetOsName() {
		return GetListFeedbackRequest_OsName_DEFAULT
	}
	return *p.OsName
}

var GetListFeedbackRequest_ProblemDesc_DEFAULT string

func (p *GetListFeedbackRequest) GetProblemDesc() (v string) {
	if !p.IsSetProblemDesc() {
		return GetListFeedbackRequest_ProblemDesc_DEFAULT
	}
	return *p.ProblemDesc
}

var GetListFeedbackRequest_AppVersion_DEFAULT string

func (p *GetListFeedbackRequest) GetAppVersion() (v string) {
	if !p.IsSetAppVersion() {
		return GetListFeedbackRequest_AppVersion_DEFAULT
	}
	return *p.AppVersion
}

var GetListFeedbackRequest_BeginTimeMs_DEFAULT int64

func (p *GetListFeedbackRequest) GetBeginTimeMs() (v int64) {
	if !p.IsSetBeginTimeMs() {
		return GetListFeedbackRequest_BeginTimeMs_DEFAULT
	}
	return *p.BeginTimeMs
}

var GetListFeedbackRequest_EndTimeMs_DEFAULT int64

func (p *GetListFeedbackRequest) GetEndTimeMs() (v int64) {
	if !p.IsSetEndTimeMs() {
		return GetListFeedbackRequest_EndTimeMs_DEFAULT
	}
	return *p.EndTimeMs
}

var GetListFeedbackRequest_Limit_DEFAULT int64

func (p *GetListFeedbackRequest) GetLimit() (v int64) {
	if !p.IsSetLimit() {
		return GetListFeedbackRequest_Limit_DEFAULT
	}
	return *p.Limit
}

var GetListFeedbackRequest_PageToken_DEFAULT int64

func (p *GetListFeedbackRequest) GetPageToken() (v int64) {
	if !p.IsSetPageToken() {
		return GetListFeedbackRequest_PageToken_DEFAULT
	}
	return *p.PageToken
}

var GetListFeedbackRequest_OrderDesc_DEFAULT bool

func (p *GetListFeedbackRequest) GetOrderDesc() (v bool) {
	if !p.IsSetOrderDesc() {
		return GetListFeedbackRequest_OrderDesc_DEFAULT
	}
	return *p.OrderDesc
}
func (p *GetListFeedbackRequest) SetStuId(val *string) {
	p.StuId = val
}
func (p *GetListFeedbackRequest) SetName(val *string) {
	p.Name = val
}
func (p *GetListFeedbackRequest) SetNetworkEnv(val *string) {
	p.NetworkEnv = val
}
func (p *GetListFeedbackRequest) SetIsOnCampus(val *bool) {
	p.IsOnCampus = val
}
func (p *GetListFeedbackRequest) SetOsName(val *string) {
	p.OsName = val
}
func (p *GetListFeedbackRequest) SetProblemDesc(val *string) {
	p.ProblemDesc = val
}
func (p *GetListFeedbackRequest) SetAppVersion(val *string) {
	p.AppVersion = val
}
func (p *GetListFeedbackRequest) SetBeginTimeMs(val *int64) {
	p.BeginTimeMs = val
}
func (p *GetListFeedbackRequest) SetEndTimeMs(val *int64) {
	p.EndTimeMs = val
}
func (p *GetListFeedbackRequest) SetLimit(val *int64) {
	p.Limit = val
}
func (p *GetListFeedbackRequest) SetPageToken(val *int64) {
	p.PageToken = val
}
func (p *GetListFeedbackRequest) SetOrderDesc(val *bool) {
	p.OrderDesc = val
}

func (p *GetListFeedbackRequest) IsSetStuId() bool {
	return p.StuId != nil
}

func (p *GetListFeedbackRequest) IsSetName() bool {
	return p.Name != nil
}

func (p *GetListFeedbackRequest) IsSetNetworkEnv() bool {
	return p.NetworkEnv != nil
}

func (p *GetListFeedbackRequest) IsSetIsOnCampus() bool {
	return p.IsOnCampus != nil
}

func (p *GetListFeedbackRequest) IsSetOsName() bool {
	return p.OsName != nil
}

func (p *GetListFeedbackRequest) IsSetProblemDesc() bool {
	return p.ProblemDesc != nil
}

func (p *GetListFeedbackRequest) IsSetAppVersion() bool {
	return p.AppVersion != nil
}

func (p *GetListFeedbackRequest) IsSetBeginTimeMs() bool {
	return p.BeginTimeMs != nil
}

func (p *GetListFeedbackRequest) IsSetEndTimeMs() bool {
	return p.EndTimeMs != nil
}

func (p *GetListFeedbackRequest) IsSetLimit() bool {
	return p.Limit != nil
}

func (p *GetListFeedbackRequest) IsSetPageToken() bool {
	return p.PageToken != nil
}

func (p *GetListFeedbackRequest) IsSetOrderDesc() bool {
	return p.OrderDesc != nil
}

func (p *GetListFeedbackRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetListFeedbackRequest(%+v)", *p)
}

var fieldIDToName_GetListFeedbackRequest = map[int16]string{
	1:  "stu_id",
	2:  "name",
	3:  "network_env",
	4:  "is_on_campus",
	5:  "os_name",
	6:  "problem_desc",
	7:  "app_version",
	8:  "begin_time_ms",
	9:  "end_time_ms",
	10: "limit",
	11: "page_token",
	12: "order_desc",
}

type GetListFeedbackResponse struct {
	Base      *model.BaseResp           `thrift:"base,1,required" frugal:"1,required,model.BaseResp" json:"base"`
	Data      []*model.FeedbackListItem `thrift:"data,2,optional" frugal:"2,optional,list<model.FeedbackListItem>" json:"data,omitempty"`
	PageToken *int64                    `thrift:"page_token,3,optional" frugal:"3,optional,i64" json:"page_token,omitempty"`
}

func NewGetListFeedbackResponse() *GetListFeedbackResponse {
	return &GetListFeedbackResponse{}
}

func (p *GetListFeedbackResponse) InitDefault() {
}

var GetListFeedbackResponse_Base_DEFAULT *model.BaseResp

func (p *GetListFeedbackResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return GetListFeedbackResponse_Base_DEFAULT
	}
	return p.Base
}

var GetListFeedbackResponse_Data_DEFAULT []*model.FeedbackListItem

func (p *GetListFeedbackResponse) GetData() (v []*model.FeedbackListItem) {
	if !p.IsSetData() {
		return GetListFeedbackResponse_Data_DEFAULT
	}
	return p.Data
}

var GetListFeedbackResponse_PageToken_DEFAULT int64

func (p *GetListFeedbackResponse) GetPageToken() (v int64) {
	if !p.IsSetPageToken() {
		return GetListFeedbackResponse_PageToken_DEFAULT
	}
	return *p.PageToken
}
func (p *GetListFeedbackResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}
func (p *GetListFeedbackResponse) SetData(val []*model.FeedbackListItem) {
	p.Data = val
}
func (p *GetListFeedbackResponse) SetPageToken(val *int64) {
	p.PageToken = val
}

func (p *GetListFeedbackResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *GetListFeedbackResponse) IsSetData() bool {
	return p.Data != nil
}

func (p *GetListFeedbackResponse) IsSetPageToken() bool {
	return p.PageToken != nil
}

func (p *GetListFeedbackResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetListFeedbackResponse(%+v)", *p)
}

var fieldIDToName_GetListFeedbackResponse = map[int16]string{
	1: "base",
	2: "data",
	3: "page_token",
}

type OAService interface {
	CreateFeedback(ctx context.Context, request *CreateFeedbackRequest) (r *CreateFeedbackResponse, err error)

	GetFeedbackById(ctx context.Context, request *GetFeedbackByIDRequest) (r *FeedbackDetailResponse, err error)

	GetFeedbackList(ctx context.Context, request *GetListFeedbackRequest) (r *GetListFeedbackResponse, err error)
}

type OAServiceCreateFeedbackArgs struct {
	Request *CreateFeedbackRequest `thrift:"request,1" frugal:"1,default,CreateFeedbackRequest" json:"request"`
}

func NewOAServiceCreateFeedbackArgs() *OAServiceCreateFeedbackArgs {
	return &OAServiceCreateFeedbackArgs{}
}

func (p *OAServiceCreateFeedbackArgs) InitDefault() {
}

var OAServiceCreateFeedbackArgs_Request_DEFAULT *CreateFeedbackRequest

func (p *OAServiceCreateFeedbackArgs) GetRequest() (v *CreateFeedbackRequest) {
	if !p.IsSetRequest() {
		return OAServiceCreateFeedbackArgs_Request_DEFAULT
	}
	return p.Request
}
func (p *OAServiceCreateFeedbackArgs) SetRequest(val *CreateFeedbackRequest) {
	p.Request = val
}

func (p *OAServiceCreateFeedbackArgs) IsSetRequest() bool {
	return p.Request != nil
}

func (p *OAServiceCreateFeedbackArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("OAServiceCreateFeedbackArgs(%+v)", *p)
}

var fieldIDToName_OAServiceCreateFeedbackArgs = map[int16]string{
	1: "request",
}

type OAServiceCreateFeedbackResult struct {
	Success *CreateFeedbackResponse `thrift:"success,0,optional" frugal:"0,optional,CreateFeedbackResponse" json:"success,omitempty"`
}

func NewOAServiceCreateFeedbackResult() *OAServiceCreateFeedbackResult {
	return &OAServiceCreateFeedbackResult{}
}

func (p *OAServiceCreateFeedbackResult) InitDefault() {
}

var OAServiceCreateFeedbackResult_Success_DEFAULT *CreateFeedbackResponse

func (p *OAServiceCreateFeedbackResult) GetSuccess() (v *CreateFeedbackResponse) {
	if !p.IsSetSuccess() {
		return OAServiceCreateFeedbackResult_Success_DEFAULT
	}
	return p.Success
}
func (p *OAServiceCreateFeedbackResult) SetSuccess(x interface{}) {
	p.Success = x.(*CreateFeedbackResponse)
}

func (p *OAServiceCreateFeedbackResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *OAServiceCreateFeedbackResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("OAServiceCreateFeedbackResult(%+v)", *p)
}

var fieldIDToName_OAServiceCreateFeedbackResult = map[int16]string{
	0: "success",
}

type OAServiceGetFeedbackByIdArgs struct {
	Request *GetFeedbackByIDRequest `thrift:"request,1" frugal:"1,default,GetFeedbackByIDRequest" json:"request"`
}

func NewOAServiceGetFeedbackByIdArgs() *OAServiceGetFeedbackByIdArgs {
	return &OAServiceGetFeedbackByIdArgs{}
}

func (p *OAServiceGetFeedbackByIdArgs) InitDefault() {
}

var OAServiceGetFeedbackByIdArgs_Request_DEFAULT *GetFeedbackByIDRequest

func (p *OAServiceGetFeedbackByIdArgs) GetRequest() (v *GetFeedbackByIDRequest) {
	if !p.IsSetRequest() {
		return OAServiceGetFeedbackByIdArgs_Request_DEFAULT
	}
	return p.Request
}
func (p *OAServiceGetFeedbackByIdArgs) SetRequest(val *GetFeedbackByIDRequest) {
	p.Request = val
}

func (p *OAServiceGetFeedbackByIdArgs) IsSetRequest() bool {
	return p.Request != nil
}

func (p *OAServiceGetFeedbackByIdArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("OAServiceGetFeedbackByIdArgs(%+v)", *p)
}

var fieldIDToName_OAServiceGetFeedbackByIdArgs = map[int16]string{
	1: "request",
}

type OAServiceGetFeedbackByIdResult struct {
	Success *FeedbackDetailResponse `thrift:"success,0,optional" frugal:"0,optional,FeedbackDetailResponse" json:"success,omitempty"`
}

func NewOAServiceGetFeedbackByIdResult() *OAServiceGetFeedbackByIdResult {
	return &OAServiceGetFeedbackByIdResult{}
}

func (p *OAServiceGetFeedbackByIdResult) InitDefault() {
}

var OAServiceGetFeedbackByIdResult_Success_DEFAULT *FeedbackDetailResponse

func (p *OAServiceGetFeedbackByIdResult) GetSuccess() (v *FeedbackDetailResponse) {
	if !p.IsSetSuccess() {
		return OAServiceGetFeedbackByIdResult_Success_DEFAULT
	}
	return p.Success
}
func (p *OAServiceGetFeedbackByIdResult) SetSuccess(x interface{}) {
	p.Success = x.(*FeedbackDetailResponse)
}

func (p *OAServiceGetFeedbackByIdResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *OAServiceGetFeedbackByIdResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("OAServiceGetFeedbackByIdResult(%+v)", *p)
}

var fieldIDToName_OAServiceGetFeedbackByIdResult = map[int16]string{
	0: "success",
}

type OAServiceGetFeedbackListArgs struct {
	Request *GetListFeedbackRequest `thrift:"request,1" frugal:"1,default,GetListFeedbackRequest" json:"request"`
}

func NewOAServiceGetFeedbackListArgs() *OAServiceGetFeedbackListArgs {
	return &OAServiceGetFeedbackListArgs{}
}

func (p *OAServiceGetFeedbackListArgs) InitDefault() {
}

var OAServiceGetFeedbackListArgs_Request_DEFAULT *GetListFeedbackRequest

func (p *OAServiceGetFeedbackListArgs) GetRequest() (v *GetListFeedbackRequest) {
	if !p.IsSetRequest() {
		return OAServiceGetFeedbackListArgs_Request_DEFAULT
	}
	return p.Request
}
func (p *OAServiceGetFeedbackListArgs) SetRequest(val *GetListFeedbackRequest) {
	p.Request = val
}

func (p *OAServiceGetFeedbackListArgs) IsSetRequest() bool {
	return p.Request != nil
}

func (p *OAServiceGetFeedbackListArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("OAServiceGetFeedbackListArgs(%+v)", *p)
}

var fieldIDToName_OAServiceGetFeedbackListArgs = map[int16]string{
	1: "request",
}

type OAServiceGetFeedbackListResult struct {
	Success *GetListFeedbackResponse `thrift:"success,0,optional" frugal:"0,optional,GetListFeedbackResponse" json:"success,omitempty"`
}

func NewOAServiceGetFeedbackListResult() *OAServiceGetFeedbackListResult {
	return &OAServiceGetFeedbackListResult{}
}

func (p *OAServiceGetFeedbackListResult) InitDefault() {
}

var OAServiceGetFeedbackListResult_Success_DEFAULT *GetListFeedbackResponse

func (p *OAServiceGetFeedbackListResult) GetSuccess() (v *GetListFeedbackResponse) {
	if !p.IsSetSuccess() {
		return OAServiceGetFeedbackListResult_Success_DEFAULT
	}
	return p.Success
}
func (p *OAServiceGetFeedbackListResult) SetSuccess(x interface{}) {
	p.Success = x.(*GetListFeedbackResponse)
}

func (p *OAServiceGetFeedbackListResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *OAServiceGetFeedbackListResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("OAServiceGetFeedbackListResult(%+v)", *p)
}

var fieldIDToName_OAServiceGetFeedbackListResult = map[int16]string{
	0: "success",
}
