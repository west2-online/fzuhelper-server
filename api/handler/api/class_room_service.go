/*
Copyright 2024 The west2-online Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by hertz generator.

package api

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"

	"github.com/west2-online/fzuhelper-server/api/model/api"
	"github.com/west2-online/fzuhelper-server/api/pack"
	"github.com/west2-online/fzuhelper-server/api/rpc"
	"github.com/west2-online/fzuhelper-server/kitex_gen/classroom"
	"github.com/west2-online/fzuhelper-server/kitex_gen/model"
	"github.com/west2-online/fzuhelper-server/pkg/errno"
	"github.com/west2-online/fzuhelper-server/pkg/logger"
)

// GetEmptyClassrooms .
// @router /api/v1/common/classroom/empty [GET]
// 获取空教室统一不需要id和cookies
func GetEmptyClassrooms(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.EmptyClassroomRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		pack.RespError(c, errno.ParamError.WithError(err))
		return
	}
	res, err := rpc.GetEmptyRoomRPC(ctx, &classroom.EmptyRoomRequest{
		Date:      req.Date,
		StartTime: req.StartTime,
		EndTime:   req.EndTime,
		Campus:    req.Campus,
	})
	if err != nil {
		pack.RespError(c, err)
		return
	}
	resp := new(api.EmptyClassroomResponse)
	resp.Classrooms = pack.BuildClassroomList(res)
	pack.RespList(c, resp.Classrooms)
}

// GetExamRoomInfo .
// @router /api/v1/jwch/classroom/exam [GET]
func GetExamRoomInfo(ctx context.Context, c *app.RequestContext) {
	var err error
	loginData, err := api.GetLoginData(ctx)
	if err != nil {
		logger.Errorf("Failed to get header in the context: %v", err) // 不属于业务错误
		pack.RespError(c, errno.ParamMissingHeader.WithMessage("Failed to get header in the context"))
		return
	}
	var req api.ExamRoomInfoRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		pack.RespError(c, errno.ParamError.WithError(err))
		return
	}
	var rooms []*model.ExamRoomInfo
	rooms, err = rpc.GetExamRoomInfoRPC(ctx, &classroom.ExamRoomInfoRequest{
		Term:      req.Term,
		LoginData: loginData,
	})
	if err != nil {
		pack.RespError(c, err)
		return
	}
	resp := new(api.ExamRoomInfoResponse)
	resp.ExamRoomInfos = pack.BuildExamRoomInfo(rooms)
	pack.RespList(c, resp.ExamRoomInfos)
}
