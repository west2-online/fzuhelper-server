// Code generated by hertz generator.

package api

import (
	"context"
	"net/http"

	"github.com/cloudwego/hertz/pkg/app"
	hzClient "github.com/cloudwego/hertz/pkg/app/client"
	"github.com/cloudwego/hertz/pkg/protocol"
	"github.com/cloudwego/hertz/pkg/protocol/consts"

	api "github.com/west2-online/fzuhelper-server/cmd/api/biz/model/api"
	"github.com/west2-online/fzuhelper-server/cmd/api/biz/pack"
	"github.com/west2-online/fzuhelper-server/pkg/errno"
	"github.com/west2-online/fzuhelper-server/pkg/logger"
)

var HzClient *hzClient.Client

// HelloWorld .
// @router /api/v1/info [GET]
func HelloWorld(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.HelloWorldRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		logger.Errorf("api.HelloWorld: BindAndValidate error %v", err)
		pack.RespError(c, errno.ParamError.WithError(err))
		return
	}

	c.Redirect(http.StatusOK, []byte("http://127.0.0.1:5000"))
}

// APILogin .
// @router /api/v1/info/login [POST]
func APILogin(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.APILoginRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		logger.Errorf("api.APILogin: BindAndValidate error %v", err)
		pack.RespError(c, errno.ParamError.WithError(err))
		return
	}

	url := "http://127.0.0.1:5000/api/login"

	request := new(protocol.Request)
	request.SetMethod(consts.MethodPost)
	request.SetRequestURI(url)
	request.SetFormData(
		map[string]string{
			"password": req.Password,
		},
	)

	res := new(protocol.Response)

	if err = HzClient.Do(ctx, request, res); err != nil {
		pack.RespError(c, err)
		return
	}
	resp := new(api.APILoginResponse)
	resp.Status = res.BodyBuffer().String()
	c.JSON(consts.StatusOK, resp)
}

// APIUpload .
// @router /api/v1/info/upload [POST]
func APIUploadVersionInfo(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.APIUploadVersionInfoRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		logger.Errorf("api.APILogin: BindAndValidate error %v", err)
		pack.RespError(c, errno.ParamError.WithError(err))
		return
	}

	url := "http://127.0.0.1:5000/api/upload"

	request := new(protocol.Request)
	request.SetMethod(consts.MethodPost)
	request.SetRequestURI(url)
	request.SetFormData(
		map[string]string{
			"version": req.Version,
		}
	)

	resp := new(api.APIUploadVersionInfoResponse)

	c.JSON(consts.StatusOK, resp)
}
