// Code generated by hertz generator.

package main

import (
	"flag"
	"github.com/cloudwego/hertz/pkg/app/server"
	"github.com/elastic/go-elasticsearch"
	hertztracer "github.com/hertz-contrib/tracer/hertz"
	"github.com/west2-online/fzuhelper-server/cmd/api/biz/pack/tracer"
	"github.com/west2-online/fzuhelper-server/cmd/api/biz/rpc"
	"github.com/west2-online/fzuhelper-server/config"
	"github.com/west2-online/fzuhelper-server/pkg/constants"
	"github.com/west2-online/fzuhelper-server/pkg/logger"
	myutils "github.com/west2-online/fzuhelper-server/pkg/utils"
)

var (
	path       *string
	listenAddr string // listen port

	EsClient *elasticsearch.Client
)

func Init() {
	path = flag.String("config", "./config", "config path")
	flag.Parse()
	config.Init(*path, constants.APIServiceName)
	logger.LoggerInit()
	tracer.InitJaegerTracer(constants.APIServiceName)
	rpc.Init()
}

func main() {
	Init()
	//r, err := nacos.NewDefaultNacosRegistry(
	//)

	for index, addr := range config.Service.AddrList {
		if ok := myutils.AddrCheck(addr); ok {
			listenAddr = addr
			break
		}
		if index == len(config.Service.AddrList)-1 {
			logger.LoggerObj.Fatalf("not available addr")
		}
	}

	h := server.New(
		server.WithHostPorts(listenAddr),
		server.WithStreamBody(true),
		//server.WithRegistry(r, &registry.Info{
		//	ServiceName: "fzuhelper-server.api",
		//	Addr:        utils.NewNetAddr("tcp", listenAddr),
		//	Weight:      10,
		//	Tags:        nil,
		//}),	for nacos
		server.WithTracer(hertztracer.NewDefaultTracer()),
		server.WithMaxRequestBodySize(1<<31),
	)
	h.Use(hertztracer.ServerCtx())

	register(h)
	h.Spin()
}
